//%attributes = {"lang":"en","executedOnServer":true} comment added and reserved by 4D.C_TEXT(<>CE_EXT_LogFile_t;$prefix_t;$message_t;$methodPath_t;$endl_t)C_TIME($docRef_h)C_BLOB($message_b)C_LONGINT($i;$limit_l;$error_l;$dontcare_l;$methodType_l)C_BOOLEAN($tableInvalid_f;$ObjectNameInvalid_f;$FormObjectNameInvalid_f)ARRAY TEXT($methodPaths_at;0)ARRAY LONGINT($methodTypes_al;0)ARRAY BOOLEAN($tableInvalid_af;0)ARRAY BOOLEAN($ObjectNameInvalid_af;0)ARRAY BOOLEAN($FormObjectNameInvalid_af;0)// Open external database.$error_l:=CE_EXT_Open If ($error_l=0)UTIL_ERR_HandlerInstall Begin SQLSELECT   methodPath,   pathType,   tableInvalid,   objectNameInvalid,   formObjectNameInvalidFROM CE_BadPathLogINTO   :$methodPaths_at,   :$methodTypes_al,   :$tableInvalid_af,   :$FormObjectNameInvalid_af,   :$ObjectNameInvalid_af;End SQL$error_l:=UTIL_ERR_HandlerRemove End if If ($error_l=0)// Close external database.$error_l:=CE_EXT_Close Else // Still close the external database if another problem// occurred but don't overwrite the error code.$dontcare_l:=CE_EXT_Close End if C_LONGINT($i;$limit_l)$limit_l:=Size of array($methodPath_t)$i:=$limit_lFor ($i;$limit_l;1;-1)If (Not(UTIL_MethodExists ($methodPath_t)))delete frEnd if End for If ($error_l=0)If (Test path name(<>CE_EXT_LogFile_t)=Is a document )DELETE DOCUMENT(<>CE_EXT_LogFile_t)End if $docRef_h:=Create document(<>CE_EXT_LogFile_t)If (OK=1)SET BLOB SIZE($bom_b;3)$bom_b{0}:=239// EF (UTF-8)$bom_b{1}:=187// BB (UTF-8)$bom_b{2}:=191// BF (UTF-8)// Insert the BOM...SEND PACKET($docRef_h;$bom_b)$i:=1$limit_l:=Size of array($methodPaths_at)$endl_t:=Char(Carriage return )While (($i<=$limit_l) & ($error_l=0))$methodPath_t:=$methodPaths_at{$i}$methodType_l:=$methodTypes_al{$i}$tableInvalid_f:=$tableInvalid_af{$i}$ObjectNameInvalid_f:=$ObjectNameInvalid_af{$i}$FormObjectNameInvalid_f:=$FormObjectNameInvalid_af{$i}$prefix_t:=$methodPath_t+": "$message_t:=""Case of : ($methodType_l=Path Project method )// For a project method there can be only one error (object name).ASSERT($tableInvalid_f=False)ASSERT($FormObjectNameInvalid_f=False)ASSERT($ObjectNameInvalid_f=True)// Only one possible error.$message_t:=$prefix_t+"Project Method name is not valid."+$endl_t: ($methodType_l=Path Table form )// For a table form there are three possible errors: table name, form name, and object name.If ($tableInvalid_f=True)$message_t:=$prefix_t+"Table name is not valid."+$endl_tEnd if If ($ObjectNameInvalid_f=True)$message_t:=$message_t+$prefix_t+"Form name is not valid."+$endl_tEnd if If ($FormObjectNameInvalid_f=True)$message_t:=$message_t+$prefix_t+"Object name is not valid."+$endl_tEnd if : ($methodType_l=Path Project form )// For a Project Form there are two possible errors: form name and object name.ASSERT($tableInvalid_f=False)If ($ObjectNameInvalid_f=True)$message_t:=$message_t+$prefix_t+"Form name is not valid."+$endl_tEnd if If ($FormObjectNameInvalid_f=True)$message_t:=$message_t+$prefix_t+"Object name is not valid."+$endl_tEnd if : ($methodType_l=Path Trigger )// For a trigger method there can be only one error (table name).ASSERT($ObjectNameInvalid_f=False)ASSERT($FormObjectNameInvalid_f=False)ASSERT($tableInvalid_f=True)$message_t:=$prefix_t+"Table name is not valid."+$endl_tElse $error_l:=<>ERR_METH_BadType_lEnd case If ($error_l=0)CONVERT FROM TEXT($message_t;"UTF-8";$message_b)SEND PACKET($docRef_h;$message_b)$i:=$i+1End if End while CLOSE DOCUMENT($docRef_h)End if If ($error_l=0)UTIL_ERR_HandleError (<>ERR_METH_BadPathsFound_l;<>CE_ModuleName_t;Current method name;"Check the logs folder.")SHOW ON DISK(<>CE_EXT_LOGFILE_T)// Open external database.$error_l:=CE_EXT_Open If ($error_l=0)UTIL_ERR_HandlerInstall Begin SQLUPDATE CE_BadPathLogSET userWarned = True;End SQL$error_l:=UTIL_ERR_HandlerRemove End if If ($error_l=0)// Close external database.$error_l:=CE_EXT_Close Else // Still close the external database if another problem// occurred but don't overwrite the error code.$dontcare_l:=CE_EXT_Close End if End if End if 