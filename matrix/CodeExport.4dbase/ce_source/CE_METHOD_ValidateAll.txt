//%attributes = {"lang":"en","invisible":true} comment added and reserved by 4D.// --[HEADERSTART]-------------------------------------// User name (OS): jfletcher// Date and time: 04/19/12, 16:51:31// ----------------------------------------------------// Description://   Wrapper for CE_METHOD_Validate, loop over all//   unsaved paths and validate.// --[HEADEREND]---------------------------------------C_POINTER($1;$pathsToValidate_p_at)C_LONGINT($0;$error_l)C_LONGINT($numPaths_l;$currentPath_l;$progressBarID_l;$percent_l;$dontcare_l)C_TEXT($currentMethodPath_t)C_BOOLEAN($badPathsFound_f)$pathsToValidate_p_at:=$1$badPathsFound_f:=False$numPaths_l:=Size of array($pathsToValidate_p_at->)// Array is traveresed in reverse because I may be deleting elements.$currentPath_l:=$numPaths_l// This is an optimization for CE_METHOD_Validate; if logging is// enabled, CE_METHOD_Validate creates a record in the external// database, which means opening and closing the connection with// each iteration of this loop.  If a open a connection ahead of// time, it will only increment the counter.$error_l:=CE_EXT_Open If ($error_l=0)// Loop over each method to validate the paths...While (($currentPath_l>=1) & ($error_l=0))$currentMethodPath_t:=$pathsToValidate_p_at->{$currentPath_l}$percent_l:=(($numPaths_l-$currentPath_l)/$numPaths_l)*100// Progress bar is only shown if operation will take a// long time (and not already open).If (($progressBarID_l=0) & PROG_ProgressRequired ($percent_l))$progressBarID_l:=Progress New // Move it to the lower-right to make slightly less obtrusive. Progress SET WINDOW VISIBLE (True;(Screen width-450);(Screen height-150))End if If ($progressBarID_l#0)If (Not(Progress Stopped ($progressBarID_l)))Progress SET TITLE ($progressBarID_l;<>CE_ComponentName_t+" Validating Method Paths")Progress SET PROGRESS ($progressBarID_l;$percent_l/100)// 4D Progress requires value between 0 and 1Progress SET MESSAGE ($progressBarID_l;String($currentPath_l)+" of "+String($numPaths_l))End if End if // Validate the path.If ($error_l=0)$error_l:=CE_METHOD_Validate ($currentMethodPath_t;True)// True = Turn on loggingEnd if // Method name/path invalid, remove it from the array.If ($error_l=<>ERR_METH_BADNAME_L)$badPathsFound_f:=True// This is a flag to let the calling method know if there were any bad paths.DELETE FROM ARRAY($pathsToValidate_p_at->;$currentPath_l)$error_l:=0// This error doesn't stop the validation.End if // Only increment if there was no error (in case I want to refer back to where I failed).If ($error_l=0)$currentPath_l:=$currentPath_l-1End if End while End if If ($error_l=0)// Close external database.$error_l:=CE_EXT_Close Else UTIL_ERR_ErrorMethod_t:=Current method name// Still close the external database if another problem// occurred but don't overwrite the error code.$dontcare_l:=CE_EXT_Close End if // Close the progress window if it was open.If ($progressBarID_l#0)Progress QUIT ($progressBarID_l)End if // Reset the counter for detecting of the progress bar should be shown.PROG_Reset If ($badPathsFound_f)CE_LOG_Start $error_l:=<>ERR_METH_BadPathsFound_lUTIL_ERR_ErrorMethod_t:=Current method nameEnd if $0:=$error_l